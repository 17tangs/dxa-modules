<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>dxa-module-smarttarget</artifactId>
        <groupId>com.sdl.dxa.modules</groupId>
        <version>1.4.0-SNAPSHOT</version>
    </parent>

    <artifactId>dxa-module-smarttarget-common</artifactId>

    <name>DXA Modules - Experience Optimization module Common</name>
    <description>Common project and common implementation for Experience Optimization module</description>

    <profiles>
        <profile>
            <id>cd-7.1.0</id>
            <properties>
                <build.classifier>7.1.0</build.classifier>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>com.sdl.dxa</groupId>
                        <artifactId>dxa-bom-2013sp1</artifactId>
                        <version>${project.version}</version>
                        <scope>import</scope>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>com.tridion.smarttarget</groupId>
                    <artifactId>session_cartridge</artifactId>
                </dependency>
                <dependency>
                    <groupId>com.tridion.smarttarget</groupId>
                    <artifactId>smarttarget_cartridge</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>cd-8.1.0</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <build.classifier>8.1.0</build.classifier>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>com.sdl.dxa</groupId>
                        <artifactId>dxa-bom-web8</artifactId>
                        <version>${project.version}</version>
                        <scope>import</scope>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>com.sdl.web</groupId>
                    <artifactId>web-ambient-api</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>two-versions-auto</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.0</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source><![CDATA[
                                        println()
                                        println "[INFO] Auto-build for ST for 7.1.0 since neither cd-7.1.0 nor cd-8.1.0 were not explicitly set"

                                        def find
                                        find = { List<String> parts ->
                                            println "[DEBUG] Invoked find() with parts = ${parts}"
                                            String joined = new File('.').absolutePath + File.separator + parts.join(File.separator)

                                            println "[DEBUG] Check if ${joined} exists or the last path part left"
                                            if (parts.size() == 1 || new File(joined).exists()) {
                                                println "[DEBUG] Returning ${joined}"
                                                return joined
                                            }
                                            int len = parts.size() - 1
                                            println "[DEBUG] Size of path parts array ${len}"
                                            find(parts.getAt(1..len))
                                        }

                                        def determineShell = {
                                            System.properties['os.name'].toLowerCase().contains('windows') ? "cmd /c " : "";
                                        }

                                        def parts = ['webapp-java', 'dxa-module-smarttarget', 'dxa-module-smarttarget-common', 'pom.xml']
                                        String path = find(parts);

                                        /* Builds the second profile automatically if no profiles are specified */
                                        groovy.lang.GString command = "${determineShell()}mvn install -f \"${path}\" -Pcd-7.1.0"
                                        println "[INFO] Executing ${command}"
                                        println()
                                        def proc = command.execute()
                                        proc.consumeProcessOutput(System.out, System.err)
                                        proc.waitFor()
                                        ]]></source>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.0.6</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.sdl.dxa</groupId>
            <artifactId>dxa-common-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sdl.dxa</groupId>
            <artifactId>dxa-tridion-provider</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tridion.smarttarget</groupId>
            <artifactId>smarttarget_core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tridion.smarttarget</groupId>
            <artifactId>smarttarget_entitymodel</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tridion</groupId>
            <artifactId>cd_core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tridion</groupId>
            <artifactId>cd_ambient</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.dd4t</groupId>
            <artifactId>dd4t-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.dd4t</groupId>
            <artifactId>dd4t-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-discovery</groupId>
            <artifactId>commons-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classifier>${build.classifier}</classifier>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>