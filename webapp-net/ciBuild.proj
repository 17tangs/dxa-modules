<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.5">

  <UsingTask TaskName="MSBuild.ExtensionPack.Web.WebClient" AssemblyFile="_tools\MSBuild.ExtensionPack.dll" />
  <UsingTask TaskName="MSBuild.ExtensionPack.FileSystem.File" AssemblyFile="_tools\MSBuild.ExtensionPack.dll"/>

  <PropertyGroup>
    <!-- Input parameters -->
    <Version Condition="'$(VERSION)' == ''">0.0.0.0</Version>
    <Version Condition="'$(VERSION)' != ''">$(VERSION)</Version>
    <BuildConfiguration>Release</BuildConfiguration>
    <DxaBuildType>Dev</DxaBuildType>
    <CdTestDeployFolder>\\saintjohn03.ams.dev\c$\inetpub\wwwroot\7.1_gitversion</CdTestDeployFolder>

    <ProjectDirectory>$(MSBuildProjectDirectory)</ProjectDirectory>
    <ReferencesDir>$(ProjectDirectory)\_references\dxa-1.2</ReferencesDir>

    <!-- Jenkins URLs -->
    <JenkinsUrl>http://masterbuild01.ams.dev:8080/hudson</JenkinsUrl>
    <DxaFrameworkArtifactsUrl>$(JenkinsUrl)/job/DXA%20$(DxaBuildType)%20CI%20Web%20App%20.NET/lastSuccessfulBuild/artifact/Site/bin</DxaFrameworkArtifactsUrl>

    <!--Tools-->
    <MsBuildExe>C:\Program Files (x86)\MSBuild\12.0\Bin\MSBuild.exe</MsBuildExe>
  </PropertyGroup>


  <!-- =============================================================================================================================================  -->
  <Target Name="Build">
    <Message Text="Start build..." Importance="high" />
        
    <CallTarget Targets="PrepareBuild"/>
    <CallTarget Targets="PackageBuild"/>
    <!--NOTE: not calling target DeployModules here; should be called separately by Jenkins build if needed. -->
  </Target>

  <!-- =============================================================================================================================================  -->
  <Target Name="PrepareBuild">
    <Message Text="Preparing build..." Importance="high" />

    <!--Update all NuGet packages for Modules.sln -->
    <Exec Command="_tools\RestorePackages Modules.sln" WorkingDirectory="$(ProjectDirectory)" />

    <CallTarget Targets="UpdateDxaFrameworkReferences"/>
  </Target>

  <!-- =============================================================================================================================================  -->
  <Target Name="UpdateDxaFrameworkReferences">
    <Message Text="Downloading latest DXA $(DxaBuildType) framework references from Jenkins..." />

    <ItemGroup>
      <AssemblyToDownload Include="Sdl.Web.Mvc.dll" />
      <AssemblyToDownload Include="Sdl.Web.Common.dll" />
      <AssemblyToDownload Include="Sdl.Web.Tridion.dll" />
    </ItemGroup>

    <!-- Make sure we can override assemblies - remove ReadOnly attribute -->
    <MSBuild.ExtensionPack.FileSystem.File 
      TaskAction="RemoveAttributes" 
      Files="@(AssemblyToDownload->'$(ReferencesDir)\%(Filename)%(Extension)')" 
      />

    <MSBuild.ExtensionPack.Web.WebClient 
      TaskAction="DownloadFile" 
      Url="$(DxaFrameworkArtifactsUrl)/%(Filename)%(Extension)" 
      FileName="@(AssemblyToDownload->'$(ReferencesDir)\%(Filename)%(Extension)')" 
      />
  </Target>

  <!-- =============================================================================================================================================  -->
  <Target Name="PackageBuild">
    <Message Text="Running build commands..." Importance="high" />

    <MSBuild 
      Projects="$(ProjectDirectory)\Modules.sln" 
      Properties="Configuration=$(BuildConfiguration);Platform=Any CPU;AsmVersion=$(Version);FileVersion=$(Version)" 
      Targets="Build" 
      StopOnFirstFailure="true" 
      />
  </Target>

  <!-- =============================================================================================================================================  -->
  <ItemGroup>
    <ModulePath
      Include="$([System.IO.Directory]::GetDirectories(&quot;$(ProjectDirectory)&quot;))"
      Exclude="$(ProjectDirectory)\_references;$(ProjectDirectory)\_tools;$(ProjectDirectory)\packages"
      />
  </ItemGroup>

  <!--Note: this target gets executed for each Module -->
  <Target Name="DeployModules" Inputs="@ModulePath" Outputs="%(ModulePath.Identity)">
    <PropertyGroup>
      <ModuleName>$([System.IO.Path]::GetFilename(&quot;%(ModulePath.Identity)&quot;))</ModuleName>
    </PropertyGroup>

    <Message Text="Deploying module '$(ModuleName)' to '$(CdTestDeployFolder)'..." />

    <ItemGroup>
      <AreaFiles Include="%(ModulePath.Identity)\Areas\**\*" />
      <BinFiles Include="%(ModulePath.Identity)\bin\$(BuildConfiguration)\**\*" />
    </ItemGroup>

    <Copy SourceFiles="@(AreaFiles)" DestinationFolder="$(CdTestDeployFolder)\Areas\%(RecursiveDir)" />
    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(CdTestDeployFolder)\bin\%(RecursiveDir)" />
  </Target>

</Project>